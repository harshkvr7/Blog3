name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api/Dockerfile  # Use appropriate paths if pushing images
          push: false
          tags: api:latest

      - name: Build and push client Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./client/Dockerfile
          push: false
          tags: client:latest

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          # Copy docker-compose.yml and any necessary files to the EC2 instance
          scp -i key.pem -o StrictHostKeyChecking=no docker-compose.yml ec2-user@$HOST:/home/ec2-user/

          # SSH into the EC2 instance and deploy
          ssh -i key.pem -o StrictHostKeyChecking=no ec2-user@$HOST << 'EOF'
            cd /home/ec2-user/
            sudo docker-compose up -d --build
          EOF
